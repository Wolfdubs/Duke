#BlueJ class context
comment0.target=CSVWeather
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=parser
comment10.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testLowestHumidityInFile()
comment12.params=
comment12.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment13.params=currentRecord\ lowestRecord
comment13.target=org.apache.commons.csv.CSVRecord\ getLowestHumidityOf2Records(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment14.params=
comment14.target=void\ testLowestHumidityInManyFiles()
comment15.params=parser
comment15.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment16.params=
comment16.target=void\ testAverageTemperatureInFile()
comment17.params=parser\ value
comment17.target=java.util.Optional\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment18.params=
comment18.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=f
comment3.target=void\ testColdestHourInFile(java.io.File)
comment4.params=
comment4.target=org.apache.commons.csv.CSVRecord\ coldestRecordAcrossDays()
comment4.text=\r\n\ \ \ \ private\ String\ fileWithColdestTemperature(){\r\n\ \ \ \ \ \ \ \ DirectoryResource\ dr\ \=\ new\ DirectoryResource();\r\n\ \ \ \ \ \ \ \ File\ coldestFile\ \=\ null;\r\n\ \ \ \ \ \ \ \ for\ (File\ f\ \:\ dr.selectedFiles()){\r\n\ \ \ \ \ \ \ \ \ \ \ \ FileResource\ fr\ \=\ new\ FileResource(f);\r\n\ \ \ \ \ \ \ \ \ \ \ \ CSVParser\ parser\ \=\ fr.getCSVParser();\r\n\ \ \ \ \ \ \ \ \ \ \ \ CSVRecord\ coldestRecordInCurrentFile\ \=\ coldestHourInFile(parser);\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (coldestRecordInCurrentFile.get("TemperatureF").equals("-9999"))\ continue;\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (coldestOfAllFiles\ \=\=\ null)\ coldestOfAllFiles\ \=\ coldestRecordInCurrentFile;\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (coldestFile\ \=\=\ null)\ coldestFile\ \=\ f;\r\n\ \ \ \ \ \ \ \ \ \ \ \ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (Double.parseDouble(coldestRecordInCurrentFile.get("TemperatureF"))\ <\ Double.parseDouble(coldestOfAllFiles.get("TemperatureF")))\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coldestOfAllFiles\ \=\ coldestRecordInCurrentFile;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.println("Coldest\ day\ was\ in\ file\ "\ +\ coldestOfAllFiles.toString());\r\n\ \ \ \ \ \ \ \ System.out.println("Coldest\ temperature\ on\ that\ day\ was"\ +\ coldestOfAllFiles.get("TemperatureF"));\r\n\ \ \ \ \ \ \ \ System.out.println("All\ the\ temperatures\ on\ the\ coldest\ day\ were\:\ "\ );\r\n\ \ \ \r\n\ \ \ \ \ \ \ \ return\ coldestFile.getName();\ \r\n}
comment5.params=
comment5.target=void\ testColdestRecordAcrossDays()
comment6.params=current\ coldestSoFar
comment6.target=org.apache.commons.csv.CSVRecord\ getColdestOfTwoRecords(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment7.params=
comment7.target=java.io.File\ fileWithColdestTemperature()
comment8.params=f
comment8.target=void\ printAllTemperaturesOfFile(java.io.File)
comment9.params=
comment9.target=void\ testFileWithColdestTemperature()
numComments=19
